#labels Featured
#some interesting ideas/applications for gsoc projects.

= Applications =

Here, are a few ideas/examples that exploit the cool features of the DS and Inferno
when they're brought togheter. 

Think of the following examples:

== Accessing media ==

set up a auth/cmd/styx server on the laptop, and on the DS do:
{{{
	mount laptop /n/remote
	bind /n/remote/cmd /cmd

	# then play and aif, wav, mp3, ogg files
	# using the tools/progs available on the laptop
	os -C /cmd madplay < file.mp3
	os -C /cmd ogg123 < file.ogg
	os -C /cmd auplay < file.wav
}}}

== Distributed apps ==
{{{
	cpu laptop
	# then run any commands at laptop
	
	cpug wm/wm
	# and get a working wm/wm running at the laptop
	# and manage resources as if you where at the laptop

}}}

== Browsing ==
{{{
	charon http://www.google.com
}}}

== ... ==

_(your own uses/examples here)_

= Implementation Details =

*Code*, i've been looking at the dslinux arm7/wifi.c code
an it seems doable right now to get it working on the inferno-ds,
all the requirements it places is to get fifo ipc mechanism working.
So the plan for a student project would be: 

  # get arm7/fifos .c
  # get arm7/wifi.c 
  # integrate both (1) & (2): write a ethernds.c which calls arm7/wifi.c

*Testing*, at the beginning the implementation can be tested with emus,
and at the same time directly on the hardware,
by using wifime share the nds files over the wifi:

  * http://masscat.afraid.org/ninds/rt2570.php
  * http://masscat.afraid.org/ninds/wifi_apps.php
  * (see the also the TechnicalBackground wiki page),
  the Nintendo DS Usb wifi dongle, can be used also the set an ap with the rt2500usb.

= Project =

Working wifi lets all the styx stuff work which is really nice.

We have these apps in mind this examples,

and surely there're lots of other interesting examples,

we need wifi to do this, any takers?